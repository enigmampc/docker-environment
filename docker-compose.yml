version: "3"

services:
  bootstrap:
    hostname: bootstrap
    container_name: bootstrap01
    image: enigmampc/worker_sw:${DOCKER_TAG}
    depends_on:
      - contract
      - km
    environment:
      - ENIGMA_ENV
      - SGX_MODE
      - MIN_CONFIRMATIONS
      - BOOTSTRAP="TRUE"
      - BOOTSTRAP_ID=B1
      - LOG_LEVEL
    ports:
      - "10300:10300" # libp2p
      - "3346:3346" # gateway
      - "9229:9229" # nodejs debugger
      - "7777:7777" # gdb server
    cap_add:
      - SYS_PTRACE

  worker:
    hostname: worker
    image: enigmampc/worker_sw:${DOCKER_TAG}
    depends_on:
      - contract
      - km
    environment:
      - ENIGMA_ENV
      - SGX_MODE
      - MIN_CONFIRMATIONS
      - LOG_LEVEL
    ports:
      - "10299:10300" # libp2p
      - "3347:3346" # gateway
      - "9230:9229" # nodejs debugger
      - "7778:7777" # gdb server

  contract:
    hostname: contract
    container_name: contract
    image: enigmampc/contract:${DOCKER_TAG}
    environment:
      - SGX_MODE
      - ENIGMA_ENV
      - AUTO_MINER
      - BLOCK_TIME
      - TIME_BETWEEN_BLOCKS
      - LOG_LEVEL
    ports:
      - "8081:8081" # contract discovery service
      - "9545:9545" # ethereum node port
      - "8001:8001" # faucet port

  km:
    hostname: km
    container_name: km
    image: enigmampc/key_management_sw:${DOCKER_TAG}
    environment:
      - ENIGMA_ENV
      - SGX_MODE
      - MIN_CONFIRMATIONS
      - LOG_LEVEL
    expose:
      - "3040" # JSON RPC port
      - "8081" # KM address discovery

  client:
    hostname: client
    image: enigmampc/client:${DOCKER_TAG}
    stdin_open: true
    tty: true
    depends_on:
      - contract
    environment:
      - ENIGMA_ENV
      - SGX_MODE
